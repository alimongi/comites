CREATE TABLE adulto (id INT AUTO_INCREMENT, ci BIGINT UNIQUE NOT NULL, nombre VARCHAR(120) NOT NULL, apellido VARCHAR(120) NOT NULL, fnacimiento DATE NOT NULL, sexo VARCHAR(255) NOT NULL, estado_civ VARCHAR(255) NOT NULL, estado_id INT NOT NULL, municipio_id INT NOT NULL, parroquia_id INT NOT NULL, direccion VARCHAR(120) NOT NULL, telf1 VARCHAR(120) NOT NULL, telf2 VARCHAR(120), mail1 VARCHAR(120) NOT NULL, familiar VARCHAR(120) NOT NULL, telf_fam VARCHAR(120) NOT NULL, fallecido VARCHAR(255) NOT NULL, comite_id INT NOT NULL, vocero VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX estado_id_idx (estado_id), INDEX municipio_id_idx (municipio_id), INDEX parroquia_id_idx (parroquia_id), INDEX comite_id_idx (comite_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comite (id INT AUTO_INCREMENT, nombre VARCHAR(120) NOT NULL, estado_id INT NOT NULL, municipio_id INT NOT NULL, parroquia_id INT NOT NULL, sector VARCHAR(80), registrado TINYINT(1) DEFAULT '0', consejo_id INT DEFAULT 0, latitud long, longitud long, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX estado_id_idx (estado_id), INDEX municipio_id_idx (municipio_id), INDEX parroquia_id_idx (parroquia_id), INDEX consejo_id_idx (consejo_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE consejocomunal (id INT AUTO_INCREMENT, codigo VARCHAR(30) NOT NULL UNIQUE, nombre VARCHAR(120) NOT NULL, estado_id INT NOT NULL, municipio_id INT NOT NULL, parroquia_id INT NOT NULL, sector VARCHAR(80), activo TINYINT(1) DEFAULT '0', contacto VARCHAR(120) NOT NULL, telefono VARCHAR(30) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX estado_id_idx (estado_id), INDEX municipio_id_idx (municipio_id), INDEX parroquia_id_idx (parroquia_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE estado (id INT AUTO_INCREMENT, nombre VARCHAR(120) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE meta (id INT AUTO_INCREMENT, estado_id INT UNIQUE NOT NULL, cantidad BIGINT UNIQUE NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX estado_id_idx (estado_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE municipio (id INT AUTO_INCREMENT, estado_id INT NOT NULL, nombre VARCHAR(120) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX estado_id_idx (estado_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE parroquia (id INT AUTO_INCREMENT, municipio_id INT NOT NULL, nombre VARCHAR(120) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX municipio_id_idx (municipio_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_estado (user_id BIGINT, estado_id INT, PRIMARY KEY(user_id, estado_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, cedula BIGINT UNIQUE NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE adulto ADD CONSTRAINT adulto_parroquia_id_parroquia_id FOREIGN KEY (parroquia_id) REFERENCES parroquia(id);
ALTER TABLE adulto ADD CONSTRAINT adulto_municipio_id_municipio_id FOREIGN KEY (municipio_id) REFERENCES municipio(id);
ALTER TABLE adulto ADD CONSTRAINT adulto_estado_id_estado_id FOREIGN KEY (estado_id) REFERENCES estado(id);
ALTER TABLE adulto ADD CONSTRAINT adulto_comite_id_comite_id FOREIGN KEY (comite_id) REFERENCES comite(id);
ALTER TABLE comite ADD CONSTRAINT comite_parroquia_id_parroquia_id FOREIGN KEY (parroquia_id) REFERENCES parroquia(id);
ALTER TABLE comite ADD CONSTRAINT comite_municipio_id_municipio_id FOREIGN KEY (municipio_id) REFERENCES municipio(id);
ALTER TABLE comite ADD CONSTRAINT comite_estado_id_estado_id FOREIGN KEY (estado_id) REFERENCES estado(id);
ALTER TABLE comite ADD CONSTRAINT comite_consejo_id_consejocomunal_id FOREIGN KEY (consejo_id) REFERENCES consejocomunal(id);
ALTER TABLE consejocomunal ADD CONSTRAINT consejocomunal_parroquia_id_parroquia_id FOREIGN KEY (parroquia_id) REFERENCES parroquia(id);
ALTER TABLE consejocomunal ADD CONSTRAINT consejocomunal_municipio_id_municipio_id FOREIGN KEY (municipio_id) REFERENCES municipio(id);
ALTER TABLE consejocomunal ADD CONSTRAINT consejocomunal_estado_id_estado_id FOREIGN KEY (estado_id) REFERENCES estado(id);
ALTER TABLE meta ADD CONSTRAINT meta_estado_id_estado_id FOREIGN KEY (estado_id) REFERENCES estado(id);
ALTER TABLE municipio ADD CONSTRAINT municipio_estado_id_estado_id FOREIGN KEY (estado_id) REFERENCES estado(id);
ALTER TABLE parroquia ADD CONSTRAINT parroquia_municipio_id_municipio_id FOREIGN KEY (municipio_id) REFERENCES municipio(id);
ALTER TABLE user_estado ADD CONSTRAINT user_estado_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE user_estado ADD CONSTRAINT user_estado_estado_id_estado_id FOREIGN KEY (estado_id) REFERENCES estado(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
