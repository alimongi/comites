<?php

/**
 * BaseMeta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $estado_id
 * @property integer $cantidad
 * @property Estado $Estado
 * 
 * @method integer getId()        Returns the current record's "id" value
 * @method integer getEstadoId()  Returns the current record's "estado_id" value
 * @method integer getCantidad()  Returns the current record's "cantidad" value
 * @method Estado  getEstado()    Returns the current record's "Estado" value
 * @method Meta    setId()        Sets the current record's "id" value
 * @method Meta    setEstadoId()  Sets the current record's "estado_id" value
 * @method Meta    setCantidad()  Sets the current record's "cantidad" value
 * @method Meta    setEstado()    Sets the current record's "Estado" value
 * 
 * @package    inasscomite
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMeta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('meta');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('estado_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'notblank' => true,
             'unique' => true,
             'length' => 4,
             ));
        $this->hasColumn('cantidad', 'integer', 10, array(
             'type' => 'integer',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Estado', array(
             'local' => 'estado_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}